package Game;

//import static org.junit.Assert.*;

import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;

public class LifeGanmeTest {

	@Before
	public void setUp() throws Exception {
	}

	@Test
	public void testCreate() {
		LifeGame me = new LifeGame();
        String[][] expected = {{"¡ð","¡ð","¡ð","¡ñ","¡ð","¡ð","¡ð","¡ð"},{"¡ñ","¡ð","¡ð","¡ð","¡ð","¡ð","¡ñ","¡ñ"},
          		 {"¡ð","¡ð","¡ñ","¡ð","¡ñ","¡ñ","¡ð","¡ð"},{"¡ð","¡ð","¡ñ","¡ð","¡ð","¡ñ","¡ñ","¡ð"},
          		 {"¡ð","¡ñ","¡ñ","¡ð","¡ð","¡ð","¡ð","¡ñ"},{"¡ð","¡ð","¡ð","¡ð","¡ñ","¡ñ","¡ð","¡ð"},
          		 {"¡ñ","¡ñ","¡ð","¡ñ","¡ð","¡ñ","¡ð","¡ð"},{"¡ñ","¡ñ","¡ð","¡ñ","¡ð","¡ñ","¡ñ","¡ð"}};
        int[] test1= {
       		0,0,0,1,0,0,0,0,
       		1,0,0,0,0,0,1,1,
       		0,0,1,0,1,1,0,0,
       		0,0,1,0,1,1,0,0,
       		0,1,1,0,0,0,0,1,
       		0,0,0,0,1,1,0,0,
       		1,1,0,1,0,1,0,0,
        	1,1,0,1,0,1,1,0,};
       String[][] point1 =me.create(expected,test1);

                Assert.assertArrayEquals(expected, point1);
	}

   @Test
    public void testCheck() {
        LifeGame me = new LifeGame();
         String[][] teststr = {{"¡ð","¡ð","¡ð","¡ñ","¡ð","¡ð","¡ð","¡ð"},{"¡ñ","¡ð","¡ð","¡ð","¡ð","¡ð","¡ñ","¡ñ"},
           		 {"¡ð","¡ð","¡ñ","¡ð","¡ñ","¡ñ","¡ð","¡ð"},{"¡ð","¡ð","¡ñ","¡ð","¡ð","¡ñ","¡ñ","¡ð"},
           		 {"¡ð","¡ñ","¡ñ","¡ð","¡ð","¡ð","¡ð","¡ñ"},{"¡ð","¡ð","¡ð","¡ð","¡ñ","¡ñ","¡ð","¡ð"},
           		 {"¡ñ","¡ñ","¡ð","¡ñ","¡ð","¡ñ","¡ð","¡ð"},{"¡ñ","¡ñ","¡ð","¡ñ","¡ð","¡ñ","¡ñ","¡ð"}};
         int[] point1 =me.check(teststr);
        int[] expected = {0,0,0,0,0,0,0,0,
        		0,0,0,3,3,3,2,1,
        		0,3,1,3,2,1,0,3,
        		0,0,2,0,3,2,2,0,
        		0,2,2,3,3,0,0,1,
        		3,0,0,3,2,2,3,0,
        		2,2,0,2,0,1,0,0,
        		2,2,0,1,0,2,2,0};

                 Assert.assertArrayEquals(expected, point1);
     }
 
    @Test
    public void testChange() {
    	LifeGame me = new LifeGame();
        String[][] teststr2 = {{"¡ð","¡ð","¡ð","¡ñ","¡ð","¡ð","¡ð","¡ð"},{"¡ñ","¡ð","¡ð","¡ð","¡ð","¡ð","¡ñ","¡ñ"},
       		 {"¡ð","¡ð","¡ñ","¡ð","¡ñ","¡ñ","¡ð","¡ð"},{"¡ð","¡ð","¡ñ","¡ð","¡ð","¡ñ","¡ñ","¡ð"},
       		 {"¡ð","¡ñ","¡ñ","¡ð","¡ð","¡ð","¡ð","¡ñ"},{"¡ð","¡ð","¡ð","¡ð","¡ñ","¡ñ","¡ð","¡ð"},
       		 {"¡ñ","¡ñ","¡ð","¡ñ","¡ð","¡ñ","¡ð","¡ð"},{"¡ñ","¡ñ","¡ð","¡ñ","¡ð","¡ñ","¡ñ","¡ð"}};
        int[] point = {0,0,0,0,0,0,0,0,
        		0,0,0,3,3,3,2,1,
        		0,3,1,3,2,1,0,3,
        		0,0,2,0,3,2,2,0,
        		0,2,2,3,3,0,0,1,
        		3,0,0,3,2,2,3,0,
        		2,2,0,2,0,1,0,0,
        		2,2,0,1,0,2,2,0};
        
         String[][] expected ={{"¡ð","¡ð","¡ð","¡ñ","¡ð","¡ð","¡ð","¡ð"},{"¡ñ","¡ð","¡ð","¡ñ","¡ñ","¡ñ","¡ñ","¡ð"},
        		 {"¡ð","¡ñ","¡ð","¡ñ","¡ñ","¡ð","¡ð","¡ñ"},{"¡ð","¡ð","¡ñ","¡ð","¡ñ","¡ñ","¡ñ","¡ð"},
        		 {"¡ð","¡ñ","¡ñ","¡ñ","¡ñ","¡ð","¡ð","¡ð"},{"¡ñ","¡ð","¡ð","¡ñ","¡ñ","¡ñ","¡ñ","¡ð"},
        		 {"¡ñ","¡ñ","¡ð","¡ñ","¡ð","¡ð","¡ð","¡ð"},{"¡ñ","¡ñ","¡ð","¡ð","¡ð","¡ñ","¡ñ","¡ð"}};
         String[][] point2=me.change(teststr2, point);
         Assert.assertArrayEquals(expected, point2);
       // assertEquals(true,Arrays.equals(exp_str,me.getNext(teststr2, point)));
   }

}
